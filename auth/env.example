# Пример файла переменных окружения для модуля аутентификации
# Скопируйте этот файл в .env и заполните реальными значениями

# ===========================================
# НАСТРОЙКИ БАЗЫ ДАННЫХ
# ===========================================

# URL подключения к PostgreSQL
# Формат: postgres://username:password@host:port/database
DB_USER_URL=postgres://chat_user:secure_password_123@localhost:5432/chat_db

# Альтернативные настройки для Docker Compose
POSTGRES_USER=chat_user
POSTGRES_PASSWORD=secure_password_123
POSTGRES_DB=chat_db

# ===========================================
# НАСТРОЙКИ YANDEX OAUTH
# ===========================================

# Client ID от Яндекс OAuth приложения
# Получите на https://oauth.yandex.ru/
CLIENT_ID=your_yandex_client_id_here

# Client Secret от Яндекс OAuth приложения
CLIENT_SECRET=your_yandex_client_secret_here

# ===========================================
# НАСТРОЙКИ БЕЗОПАСНОСТИ
# ===========================================

# Секретный ключ для подписи JWT токенов
# Должен быть длинным и случайным (минимум 32 символа)
# Сгенерируйте командой: openssl rand -base64 32
SECRET_KEY=your_super_secret_jwt_key_here_make_it_long_and_random_at_least_32_chars

# ===========================================
# НАСТРОЙКИ ПРИЛОЖЕНИЯ
# ===========================================

# Порт для HTTP сервера (по умолчанию 8000)
PORT=8000

# Режим работы (development, production)
ENVIRONMENT=development

# Уровень логирования (debug, info, warn, error)
LOG_LEVEL=debug

# ===========================================
# НАСТРОЙКИ БАЗЫ ДАННЫХ (ДОПОЛНИТЕЛЬНЫЕ)
# ===========================================

# Максимальное количество соединений в пуле
DB_MAX_CONNS=50

# Минимальное количество соединений в пуле
DB_MIN_CONNS=10

# Время жизни соединения
DB_MAX_CONN_LIFETIME=1h

# Время простоя соединения
DB_MAX_CONN_IDLE_TIME=30m

# Период проверки здоровья соединений
DB_HEALTH_CHECK_PERIOD=1m

# ===========================================
# НАСТРОЙКИ JWT ТОКЕНОВ
# ===========================================

# Время жизни access токена (по умолчанию 5 минут)
ACCESS_TOKEN_LIFETIME=5m

# Время жизни refresh токена (по умолчанию 24 часа)
REFRESH_TOKEN_LIFETIME=24h

# ===========================================
# НАСТРОЙКИ CORS
# ===========================================

# Разрешенные origins для CORS
# Разделите несколько доменов запятыми
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080

# Разрешенные методы для CORS
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS

# Разрешенные заголовки для CORS
CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-Requested-With

# ===========================================
# НАСТРОЙКИ МОНИТОРИНГА
# ===========================================

# Включить метрики Prometheus
ENABLE_METRICS=true

# Порт для метрик (по умолчанию 9090)
METRICS_PORT=9090

# Включить health check endpoint
ENABLE_HEALTH_CHECK=true

# ===========================================
# НАСТРОЙКИ РАЗРАБОТКИ
# ===========================================

# Включить hot reload (требует air)
ENABLE_HOT_RELOAD=false

# Путь к шаблонам HTML
TEMPLATES_PATH=./web/templates

# Путь к статическим файлам
STATIC_PATH=./web/static

# ===========================================
# ПРИМЕРЫ ДЛЯ РАЗНЫХ ОКРУЖЕНИЙ
# ===========================================

# Development (локальная разработка)
# DB_USER_URL=postgres://chat_user:password@localhost:5432/chat_db_dev
# ENVIRONMENT=development
# LOG_LEVEL=debug

# Testing (тестирование)
# DB_USER_URL=postgres://chat_user:password@localhost:5432/chat_db_test
# ENVIRONMENT=testing
# LOG_LEVEL=debug

# Production (продакшн)
# DB_USER_URL=postgres://prod_user:strong_password@prod-db:5432/chat_db_prod
# ENVIRONMENT=production
# LOG_LEVEL=info
# SECRET_KEY=very_long_and_secure_production_key_here

# ===========================================
# ИНСТРУКЦИИ ПО НАСТРОЙКЕ
# ===========================================

# 1. Скопируйте этот файл: cp env.example .env
# 2. Заполните все переменные реальными значениями
# 3. Убедитесь, что .env добавлен в .gitignore
# 4. Никогда не коммитьте .env файл в репозиторий
# 5. Для production используйте переменные окружения системы

# ===========================================
# ГЕНЕРАЦИЯ СЕКРЕТНЫХ КЛЮЧЕЙ
# ===========================================

# Секретный ключ для JWT:
# openssl rand -base64 32

# Случайный пароль для БД:
# openssl rand -base64 16

# UUID для тестирования:
# python3 -c "import uuid; print(uuid.uuid4())"

# ===========================================
# ПРОВЕРКА НАСТРОЙКИ
# ===========================================

# Проверить подключение к БД:
# psql "$DB_USER_URL" -c "SELECT 1;"

# Проверить переменные окружения:
# env | grep -E "(DB_|CLIENT_|SECRET_)"

# Проверить работу приложения:
# curl http://localhost:8000/







